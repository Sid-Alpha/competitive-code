package interview.easy.dp;

import static interview.easy.RunTimeCompute.compute;

public class HouseRobber {
    int[] memo = new int [500];
    public int rob(int[] nums) {
        return numHelper(nums, 0);
    }

    private int numHelper(int[] nums, int i) {
//        System.out.println("i:" + i + " | number:" + ((i<nums.length)?nums[i]:-1) + " | select:" + select + " | total:" + total);
        if(i >= nums.length) return 0;
        if(memo[i]!=0) return memo[i];
        if(nums[i]==0) return numHelper(nums, i+1);
        return memo[i] = Math.max(numHelper(nums, i+1), nums[i] + numHelper(nums, i+2));
    }

    public static void main(String[] args) {
        int[]
                arr1 = {2,1,1,2},
                arr2 = {2,7,9,3,1},
                arr3 = {1,2,3,1},
                arr4 = {114,117,207,117,235,82,90,67,143,146,53,108,200,91,80,223,58,170,110,236,81,90,222,160,165,195,187,199,114,235,197,187,69,129,64,214,228,78,188,67,205,94,205,169,241,202,144,240},
                arr5 = {101,20,230,40,50,65,806,80,900,90,10,20,6,78,30,30,4,5,90,1,20,20,30,40,50,60,70,80,850,50,503,30,10,20,10,20,20,10,5670,560,780,750,4560,5430,3450,420,1230,
                        1,12,10,20,30,430,450,560,560,210,2340,90,9090,40,50,450,320,3450,3220,240,4560,10,120,210,410,520,530,5308,870,890,980,890,230,230,4320
                        ,60,70,67,670,670,890,900,900,910,920,1230,10,1230,1220,120,1230,230,320,320},
                arr6 = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
                arr7 = {
                        101,20,230,40,50,65,806,80,900,90,10,20,6,78,30,30,4,5,90,1,20,20,30,40,50,60,70,80,850,50,503,30,10,20,10,20,20,10,5670,560,780,750,4560,5430,3450,420,1230,
                        1,12,10,20,30,430,450,560,560,210,2340,90,9090,40,50,450,320,3450,3220,240,4560,10,120,210,410,520,530,5308,870,890,980,890,230,230,4320
                        ,60,70,67,670,670,890,900,900,910,920,1230,10,1230,1220,120,1230,230,320,320,101,20,230,40,50,65,806,80,900,90,10,20,6,78,30,30,4,5,90,1,20,20,30,40,50,60,70,80,850,50,503,30,10,20,10,20,20,10,5670,560,780,750,4560,5430,3450,420,1230,
                        1,12,10,20,30,430,450,560,560,210,2340,90,9090,40,50,450,320,3450,3220,240,4560,10,120,210,410,520,530,5308,870,890,980,890,230,230,4320
                        ,60,70,67,670,670,890,900,900,910,920,1230,10,1230,1220,120,1230,230,320,320,101,20,230,40,50,65,806,80,900,90,10,20,6,78,30,30,4,5,90,1,20,20,30,40,50,60,70,80,850,50,503,30,10,20,10,20,20,10,5670,560,780,750,4560,5430,3450,420,1230,
                        1,12,10,20,30,430,450,560,560,210,2340,90,9090,40,50,450,320,3450,3220,240,4560,10,120,210,410,520,530,5308,870,890,980,890,230,230,4320
                        ,60,70,67,670,670,890,900,900,910,920,1230,10,1230,1220,120,1230,230,320,320,101,20,230,40,50,65,806,80,900,90,10,20,6,78,30,30,4,5,90,1,20,20,30,40,50,60,70,80,850,50,503,30,10,20,10,20,20,10,5670,560,780,750,4560,5430,3450,420,1230,
                        1,12,10,20,30,430,450,560,560,210,2340,90,9090,40,50,450,320,3450,3220,240,4560,10,120,210,410,520,530,5308,870,890,980,890,230,230,4320
                        ,60,70,67,670,670,890,900,900,910,920,1230,10,1230,1220,120,1230,230,320,320
                }
                        ;
        System.out.println(compute(() ->new HouseRobber().rob(arr1)));
        System.out.println(compute(() ->new HouseRobber().rob(arr2)));
        System.out.println(compute(() ->new HouseRobber().rob(arr3)));
        System.out.println(compute(() ->new HouseRobber().rob(arr4)));
//        System.out.println(new HouseRobber().rob(arr5));
//        System.out.println(new HouseRobber().rob(arr6));
//        System.out.println(new HouseRobber().rob(arr7));
    }


}
